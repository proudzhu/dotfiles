#!/bin/bash
###Qname: Quick basic batch renaming.

#Defaults
TGT=""
FIX=""
INC=""
DIR="$PWD"
SHOW="yes"
MODE="" #single, global

function help_me () {
cat << END

==========================================================================
    USAGE: $(basename "$0") -g -t "STRING" -f "FIX"
           $(basename "$0") -s -f "FIX" -i "FILTER"

    --directory|-d) Specify target directory.               [PWD]
    --target|-t)    Specify a string to be replaced/removed.
            Don't use this option when you're doing prefixing!
            Use -i for the filtering instead.        [NONE]
    --fix|-f)       Specify a string to replace the target string, or
            to put as prefix to the filenames.          [NONE]
    --include|-i)   Use filter. Useful when prefixing.
                Also useful if you don't want to rename all files
            which contains STRING.                       [ALL]
    --single|-s)    Single replace MODE: only replace/remove the first
            occurance of target STRING.
    --global|-g)    Global replace MODE: replace/remove all instances 
                   of target STRING.
    --force|-F)     Do not ask for confirming.
    --help|-h)      print this help.

    NOTE: -s -g options are incompatible. If you specify more than
          one of these, only the last one is respected.
          -s -f without -t, it does prefixing!
==========================================================================

END
}

function display_rename () {
TGT="$1" ; FIX="$2" ; INC="$3" ; MODE="$4"
#Note we need to escape "Regular Expression Operators" for awk, with every character enclosed by [ ].
case "$MODE" in
        single)
        ls -1 | grep -F "$TGT" | grep -F "$INC" |
        awk -v tgt="$(echo "$TGT" | sed 's/./[&]/g')" -v fix="$FIX" '{ printf("mv -- \"%s\" ",$0);sub(tgt,fix);printf("\"%s\"\n",$0) }'
        ;;
        global)
        ls -1 | grep -F "$TGT" | grep -F "$INC" |
        awk -v tgt="$(echo "$TGT" | sed 's/./[&]/g')" -v fix="$FIX" '{ printf("mv -- \"%s\" ",$0);gsub(tgt,fix);printf("\"%s\"\n",$0) }'
        ;;
esac
}

function do_rename ()
{
cd "$DIR" 2>/dev/null && echo -e "\x1b[0;32m""$PWD""\x1b[00;00m"

if [ "$?" != "0" ] ; then
echo '** Directory "'"$DIR"'" does not exist! **' ; echo ; exit 1
fi

if [ "$SHOW" == "yes" ] ; then
    echo '* Careful *'
    echo '-------------------------------------------------------------------------'
    display_rename "$1" "$2" "$3" "$4"
    echo '-------------------------------------------------------------------------'
    echo -n '* Rename Files? [y/n].. '
    read ANS
    case "$ANS" in
        y|Y) display_rename "$1" "$2" "$3" "$4" | sh
             echo '* Files renamed.'
        ;;
        n|N) echo '* Nothing renamed.'
        ;;
        *)   echo '* Wrong answer!' ; exit 1
        ;;
    esac
elif [ "$SHOW" == "no" ] ; then
    display_rename "$1" "$2" "$3" "$4" | sh ; echo '* Files renamed!'
fi
}

#Options
OPT_TEMP=$(getopt --longoptions directory:,target:,include:,fix:,single,global,force,help --options d:t:f:i:sgFh -- "$@")

eval set -- "$OPT_TEMP"

while : ; do
case "$1" in
    --directory|-d) DIR="$2"   ; shift 2  ;;
    --target|-t)    TGT="$2"   ; shift 2  ;;
    --fix|-f)       FIX="$2"   ; shift 2  ;;
    --include|-i)   INC="$2"   ; shift 2  ;;
    --single|-s)    MODE="single" ; shift ;;
    --global|-g)    MODE="global" ; shift ;;
    --force|-F)     SHOW="no"  ; shift    ;;
    --help|-h)      help_me    ; exit 0   ;;
    --)             shift      ; break    ;;
    *)              echo 'Wrong option!' ; exit 1 ;;
esac
done

#Do it
echo
case "$MODE" in
    single)
    do_rename "$TGT" "$FIX" "$INC" single 
    ;;
    global)
    do_rename "$TGT" "$FIX" "$INC" global
    ;;
    *)
    echo '** You must specify MODE, see -h for more info. **'
    ;;
esac
echo